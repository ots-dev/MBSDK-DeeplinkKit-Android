package com.daimler.mbdeeplinkkit

import android.content.Context
import com.daimler.mbdeeplinkkit.MBDeepLinkKit.openDeepLink
import com.daimler.mbdeeplinkkit.common.DeepLink
import com.daimler.mbdeeplinkkit.common.DeepLinkOpenResult
import com.daimler.mbdeeplinkkit.common.FallbackTarget
import com.daimler.mbdeeplinkkit.common.FamilyApp

/**
 * Service responsible to open [DeepLink]s on the device.
 */
interface IntentService {

    /**
     * Tries to start an Activity with an Intent generated by the deep link
     * and an optional [finOrVin].
     * If a [finOrVin] is given, the [deepLink] will only be opened if it is
     * eligible for the vehicle.
     *
     * @param context the context used to start the Activity
     * @param deepLink the [DeepLink] to open
     * @param finOrVin optional FIN or VIN of a vehicle
     * @param fallbackTarget the fallback if the [deepLink] link could not be opened
     *
     * @return a result of type [DeepLinkOpenResult]
     */
    fun openDeepLink(context: Context, deepLink: DeepLink, finOrVin: String?, fallbackTarget: FallbackTarget): DeepLinkOpenResult

    /**
     * Same as [openDeepLink], but uses the [DeepLink] with the given [id] from the local storage.
     */
    fun openDeepLink(context: Context, id: String, finOrVin: String?, fallbackTarget: FallbackTarget): DeepLinkOpenResult

    /**
     * Tries to start an Activity with an Intent generated by the [app].
     *
     * @param context the context used to start the Activity
     * @param app the app to open
     * @param fallbackTarget the fallback if the app could not be opened
     */
    fun openFamilyApp(context: Context, app: FamilyApp, fallbackTarget: FallbackTarget): DeepLinkOpenResult

    /**
     * Same as [openFamilyApp], but uses the [FamilyApp] with the given [id] from the local storage.
     */
    fun openFamilyApp(context: Context, id: String, fallbackTarget: FallbackTarget): DeepLinkOpenResult
}